package pages

import (
	"github.com/kahono0/netfl/pkg/p2p"
	"github.com/kahono0/netfl/repo"
)

templ Layout() {
	<!DOCTYPE html>
	<html>
		<head>
			<link rel="stylesheet" href="/static/output.css"/>
			<style>
               :root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 255, 255, 255;
  --background-end-rgb:214, 219, 220 ;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}


    </style>
		</head>
		<body class="h-screen w-screen">
			{ children... }
		</body>
	</html>
}

templ OnlineUser(peer p2p.PeerInfo) {
	<div class="hs-tooltip inline-block">
		<a class="hs-tooltip-toggle relative inline-block" href="#">
			<img class="inline-block size-[30px] rounded-full" src={ peer.Avatar } alt="Avatar"/>
			<span class="absolute bottom-0 end-0 block size-3 rounded-full ring-2 ring-white bg-teal-400 dark:ring-neutral-900"></span>
			<div class="hs-tooltip-content hs-tooltip-shown:opacity-100 hs-tooltip-shown:visible opacity-0 transition-opacity inline-block absolute invisible z-10 py-1 px-2 bg-gray-900 text-xs font-medium text-white rounded-lg shadow-sm dark:bg-neutral-700" role="tooltip">
				{ peer.Alias } is online
			</div>
		</a>
	</div>
}

templ Movie(m repo.Movie) {
	<div class="w-[500px] h-[450px] border-2">
		<div class="w-full h-80">
			<img class="w-full h-full object-cover" src={ m.ThumbNailUrl } alt="Card Image"/>
		</div>
		<div class="w-full p-4">
			<p class="break-words overflow-hidden text-ellipsis text-xl font-bold">
				{ m.Name }
			</p>
			<div class="mt-2">
				if m.IsPlayableByWebBrowser {
					<a class="font-semibold text-white py-2 px-4 bg-blue-700 rounded-md" href={ templ.SafeURL(m.MovieUrl) } target="_blank">
						Play
					</a>
				} else {
					<a class="font-semibold text-white py-2 px-4 bg-blue-700 rounded-md" href={ templ.SafeURL(m.MovieUrl) } download>
						Download
					</a>
				}
			</div>
		</div>
	</div>
}

templ Aside(peers []p2p.PeerInfo) {
	<div class="w-1/6 border-r-2 p-8">
		Online users
		<div class="flex flex-col gap-2">
			for _, peer := range peers {
				if peer.Alias != "" {
					@OnlineUser(peer)
				}
			}
		</div>
	</div>
}

templ Content(movies []repo.Movie) {
	<div class="w-5/6">
		Movies
		<div class="h-full flex flex-start flex-wrap gap-8 overflow-auto pb-12">
			for _, m := range movies {
				@Movie(m)
			}
		</div>
	</div>
}

templ Index(peers []p2p.PeerInfo, movies []repo.Movie) {
	@Layout() {
		<div class="w-full h-screen flex overflow-hidden">
			@Aside(peers)
			@Content(movies)
		</div>
	}
}
